enum PlayerType {
  PHILANTHROPIST
  SOCIALISER
  FREE_SPIRIT
  ACHIEVER
  PLAYER
  DISRUPTOR
}

input AnswerInput {
  text: String!
  playerTypes: [PlayerType!]!
}

input QuestionInput {
  text: String!
  selectedAnswer: AnswerInput!
  possibleAnswers: [AnswerInput!]!
}

input PlayerAnswerInput {
  questions: [QuestionInput!]!
}

type PlayerTypeScore {
  type: PlayerType!
  value: Float!
}

type PlayerHexadScore {
  scores: [PlayerTypeScore!]!
}

type User {
  id: UUID!
  name: String!
  email: String!
}


type Mutation {
  evaluatePlayerHexadScore(userId: UUID!, input: PlayerAnswerInput!): PlayerHexadScore!
}

type Query {
  getPlayerHexadScoreById(userId: UUID!): PlayerHexadScore!
  PlayerHexadScoreExists(userId: UUID!): Boolean!
  getWeeklyCourseLeaderboards(courseID: ID!, date: String!): [Leaderboard!]
  getMonthlyCourseLeaderboards(courseID: ID!, date: String!): [Leaderboard!]
  getAllTimeCourseLeaderboards(courseID: ID!, date: String!): [Leaderboard!]
}


